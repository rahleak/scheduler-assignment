{"ast":null,"code":"import _slicedToArray from \"/Users/rahwaleakemariam/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rahwaleakemariam/scheduler/src/components/Appointment/Form.js\";\nimport React, { useState } from 'react';\nimport InterviewerList from \"components/InterviewerList\";\nimport Button from \"components/Button\";\nexport default function Form(props) {\n  const interviewers = props.interviewers,\n        onSave = props.onSave,\n        onCancel = props.onCancel;\n\n  const _useState = useState(props.student || \"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        student = _useState2[0],\n        setStudent = _useState2[1];\n\n  const _useState3 = useState(props.interviewer || null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        interviewer = _useState4[0],\n        setInterviewer = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  function reset() {\n    setStudent(\"\");\n    setInterviewer(\"\");\n  }\n\n  function cancel() {\n    reset();\n    onCancel();\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n\n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"appointment__card appointment__card--create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__card-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => event.preventDefault(),\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: student,\n    className: \"appointment__create-input text--semi-bold\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Enter Student Name\",\n    onChange: e => setStudent(e.target.value),\n    \"data-testid\": \"student-name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__validation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, error), /*#__PURE__*/React.createElement(InterviewerList, {\n    interviewers: interviewers,\n    value: interviewer,\n    onChange: setInterviewer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__card-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: () => cancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    confirm: true,\n    onClick: () => validate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/Users/rahwaleakemariam/scheduler/src/components/Appointment/Form.js"],"names":["React","useState","InterviewerList","Button","Form","props","interviewers","onSave","onCancel","student","setStudent","interviewer","setInterviewer","error","setError","reset","cancel","validate","name","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport InterviewerList from \"components/InterviewerList\";\nimport Button from \"components/Button\";\n\nexport default function Form(props) {\n  const { interviewers, onSave, onCancel } = props;\n  const [student, setStudent] = useState(props.student || \"\");\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [error, setError] = useState(\"\");\n\n  function reset() {\n    setStudent(\"\");\n    setInterviewer(\"\");\n  }\n\n  function cancel() {\n    reset();\n    onCancel();\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n  \n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n  <section className=\"appointment__card-left\">\n    <form onSubmit={event => event.preventDefault()} autoComplete=\"off\">\n      <input\n        value={student}\n        className=\"appointment__create-input text--semi-bold\"\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Enter Student Name\"\n        onChange={(e) => setStudent(e.target.value)}\n        data-testid=\"student-name-input\"\n      />\n    </form>\n    <section className=\"appointment__validation\">{error}</section>\n    <InterviewerList\n      interviewers={interviewers}\n      value={interviewer} \n      onChange={setInterviewer}\n    />\n  </section>\n  <section className=\"appointment__card-right\">\n    <section className=\"appointment__actions\">\n      <Button danger onClick={() => cancel()}>Cancel</Button>\n      <Button confirm onClick={() => validate()}>Save</Button>\n    </section>\n  </section>\n  </main>\n  )\n}"]},"metadata":{},"sourceType":"module"}