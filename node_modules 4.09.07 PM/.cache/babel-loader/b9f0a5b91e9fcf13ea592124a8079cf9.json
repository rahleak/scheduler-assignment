{"ast":null,"code":"import _objectSpread from \"/Users/rahwaleakemariam/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rahwaleakemariam/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rahwaleakemariam/scheduler/src/components/Application.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DayList from \"./DayList\";\nimport Appointment from \"./Appointment\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\nimport \"components/Application\";\nexport default function Application(props) {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const day = state.day,\n        days = state.days,\n        appointments = state.appointments,\n        interviewers = state.interviewers;\n\n  const setDay = day => {\n    setState(state => _objectSpread({}, state, {\n      day\n    }));\n  };\n\n  const dailyAppointments = getAppointmentsForDay(state, day);\n  const dailyInterviewers = getInterviewersForDay(state, day);\n  useEffect(() => {\n    Promise.all([axios.get(\"/api/days\"), axios.get(\"/api/appointments\"), axios.get(\"/api/interviewers\")]).then(all => {\n      const _all = _slicedToArray(all, 3),\n            days = _all[0],\n            appointments = _all[1],\n            interviewers = _all[2];\n\n      setState(prev => _objectSpread({}, prev, {\n        days: days.data,\n        appointments: appointments.data,\n        interviewers: interviewers.data\n      }));\n    });\n  }, [state.day]); // console.log(state.days);\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DayList, {\n    days: days,\n    day: day,\n    setDay: setDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, dailyAppointments && dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n    return /*#__PURE__*/React.createElement(Appointment, {\n      key: appointment.id,\n      time: appointment.time,\n      interview: interview,\n      interviewers: dailyInterviewers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/rahwaleakemariam/scheduler/src/components/Application.js"],"names":["React","useState","useEffect","axios","DayList","Appointment","getAppointmentsForDay","getInterview","getInterviewersForDay","Application","props","day","days","appointments","state","setState","interviewers","setDay","dailyAppointments","dailyInterviewers","Promise","all","get","then","prev","data","map","appointment","interview","id","time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DayList from \"./DayList\";\nimport Appointment from \"./Appointment\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\n\nimport \"components/Application\";\n\n\nexport default function Application(props) {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: []\n    }\n  );\n\n  const { day, days, appointments, interviewers } = state;\n  \n\n  const setDay = (day) => {\n    setState(state => ({ ...state, day }));\n  }\n  const dailyAppointments = getAppointmentsForDay(state, day);\n  const dailyInterviewers = getInterviewersForDay(state, day);\n\nuseEffect(() => {\n    \n    Promise.all([\n      axios.get(\"/api/days\"),\n      axios.get(\"/api/appointments\"),\n      axios.get(\"/api/interviewers\")\n    ]).then((all) => {\n    const [days, appointments, interviewers] = all;\n    setState(prev => ({...prev, days: days.data, appointments: appointments.data, interviewers: interviewers.data}));\n    \n      \n  })\n  }, [state.day])\n// console.log(state.days);\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n        {\n          <DayList\n          days={days}\n          day={day}\n          setDay={setDay}\n          />\n        }\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {\n        dailyAppointments && dailyAppointments.map((appointment) => {\n          const interview = getInterview(state, appointment.interview);\n          \n          return (\n            <Appointment\n            key={appointment.id}\n            time={appointment.time}\n            interview={interview}\n            interviewers={dailyInterviewers}\n            />\n          )\n        })\n      }\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}