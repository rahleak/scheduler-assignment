{"ast":null,"code":"import _objectSpread from \"/Users/rahwaleakemariam/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rahwaleakemariam/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rahwaleakemariam/scheduler/src/components/Application.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DayList from \"./DayList\";\nimport Appointment from \"./Appointment\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\nimport \"components/Application\";\nexport default function Application(props) {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const day = state.day,\n        days = state.days,\n        interviewers = state.interviewers;\n\n  const setDay = day => {\n    setState(state => _objectSpread({}, state, {\n      day\n    }));\n  };\n\n  const dailyAppointments = getAppointmentsForDay(state, day);\n  const dailyInterviewers = getInterviewersForDay(state, day);\n\n  function bookInterview(id, interview) {\n    const appointment = _objectSpread({}, state.appointments[id], {\n      interview: _objectSpread({}, interview)\n    });\n\n    const appointments = _objectSpread({}, state.appointments, {\n      [id]: appointment\n    });\n\n    setState(_objectSpread({}, state, {\n      appointments: appointments\n    }));\n\n    if (interview) {\n      return axios.put(\"http://localhost:8001/api/appointments/\".concat(id), {\n        interview\n      }).then(res => {\n        console.log(res);\n        setState(_objectSpread({}, state, {\n          appointments: appointments\n        }));\n      });\n    }\n\n    console.log(\"this is interview at bookInterview\", appointments);\n  }\n\n  useEffect(() => {\n    Promise.all([axios.get(\"/api/days\"), axios.get(\"/api/appointments\"), axios.get(\"/api/interviewers\")]).then(all => {\n      const _all = _slicedToArray(all, 3),\n            days = _all[0],\n            appointments = _all[1],\n            interviewers = _all[2];\n\n      setState(prev => _objectSpread({}, prev, {\n        days: days.data,\n        appointments: appointments.data,\n        interviewers: interviewers.data\n      }));\n    });\n  }, [state.day]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DayList, {\n    days: days,\n    day: day,\n    setDay: setDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, dailyAppointments && dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n    return /*#__PURE__*/React.createElement(Appointment, {\n      key: appointment.id,\n      id: appointment.id,\n      time: appointment.time,\n      interview: interview,\n      interviewers: dailyInterviewers,\n      bookInterview: bookInterview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/rahwaleakemariam/scheduler/src/components/Application.js"],"names":["React","useState","useEffect","axios","DayList","Appointment","getAppointmentsForDay","getInterview","getInterviewersForDay","Application","props","day","days","appointments","state","setState","interviewers","setDay","dailyAppointments","dailyInterviewers","bookInterview","id","interview","appointment","put","then","res","console","log","Promise","all","get","prev","data","map","time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DayList from \"./DayList\";\nimport Appointment from \"./Appointment\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\n\nimport \"components/Application\";\n\n\nexport default function Application(props) {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: []\n  }\n  );\n\n  const { day, days, interviewers } = state;\n\n\n  const setDay = (day) => {\n    setState(state => ({ ...state, day }));\n  }\n  const dailyAppointments = getAppointmentsForDay(state, day);\n  const dailyInterviewers = getInterviewersForDay(state, day);\n\n  function bookInterview(id, interview) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n    setState({\n      ...state,\n      appointments: appointments\n    });\n    if (interview) {\n      return (axios\n        .put(`http://localhost:8001/api/appointments/${id}`, {\n        interview\n      })\n        .then((res) => {\n          console.log(res);\n          setState({\n            ...state,\n            appointments: appointments\n          })\n        }\n        )\n      )\n    }\n    console.log(\"this is interview at bookInterview\", appointments);\n  }\n\n  \n\n  useEffect(() => {\n\n    Promise.all([\n      axios.get(\"/api/days\"),\n      axios.get(\"/api/appointments\"),\n      axios.get(\"/api/interviewers\")\n    ]).then((all) => {\n      const [days, appointments, interviewers] = all;\n      setState(prev => ({ ...prev, days: days.data, appointments: appointments.data, interviewers: interviewers.data }));\n    })\n  }, [state.day])\n\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          {\n            <DayList\n              days={days}\n              day={day}\n              setDay={setDay}\n            />\n          }\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {\n          dailyAppointments && dailyAppointments.map((appointment) => {\n            const interview = getInterview(state, appointment.interview);\n\n            return (\n              <Appointment\n                key={appointment.id}\n                id={appointment.id}\n                time={appointment.time}\n                interview={interview}\n                interviewers={dailyInterviewers}\n                bookInterview={bookInterview}\n                \n              />\n            )\n          })\n        }\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}