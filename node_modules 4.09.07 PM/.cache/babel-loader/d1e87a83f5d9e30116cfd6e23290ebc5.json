{"ast":null,"code":"import _objectSpread from \"/Users/rahwaleakemariam/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rahwaleakemariam/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nexport default function useApplicationData(params) {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const day = state.day,\n        days = state.days;\n\n  const setDay = day => {\n    setState(state => _objectSpread({}, state, {\n      day\n    }));\n  };\n\n  function bookInterview(id, interview) {\n    const appointment = _objectSpread({}, state.appointments[id], {\n      interview: _objectSpread({}, interview)\n    });\n\n    const appointments = _objectSpread({}, state.appointments, {\n      [id]: appointment\n    });\n\n    setState(_objectSpread({}, state, {\n      appointments: appointments\n    }));\n\n    if (interview) {\n      return axios.put(\"http://localhost:8001/api/appointments/\".concat(id), {\n        interview\n      }).then(res => {\n        console.log(res);\n        setState(_objectSpread({}, state, {\n          appointments: appointments\n        }));\n      });\n    }\n\n    console.log(\"this is interview at bookInterview\", appointments);\n  }\n\n  function cancelInterview(id) {\n    console.log('cancelling interview');\n    setState(_objectSpread({}, state, {\n      [id]: _objectSpread({}, state.appointments[id], {\n        interview: null\n      })\n    }));\n\n    if (id) {\n      return axios.delete(\"http://localhost:8001/api/appointments/\".concat(id)).then(res => {\n        console.log(res);\n        setState(_objectSpread({}, state, {\n          interview: null\n        }));\n      });\n    }\n  }\n\n  useEffect(() => {\n    Promise.all([axios.get(\"/api/days\"), axios.get(\"/api/appointments\"), axios.get(\"/api/interviewers\")]).then(all => {\n      const _all = _slicedToArray(all, 3),\n            days = _all[0],\n            appointments = _all[1],\n            interviewers = _all[2];\n\n      setState(prev => _objectSpread({}, prev, {\n        days: days.data,\n        appointments: appointments.data,\n        interviewers: interviewers.data\n      }));\n    });\n  }, [state.day]);\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  };\n}","map":{"version":3,"sources":["/Users/rahwaleakemariam/scheduler/src/hooks/useApplicationData.js"],"names":["useState","useApplicationData","params","day","days","appointments","state","setState","setDay","bookInterview","id","interview","appointment","axios","put","then","res","console","log","cancelInterview","delete","useEffect","Promise","all","get","interviewers","prev","data"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nexport default function useApplicationData(params) {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: []\n  });\n\n  const { day, days } = state;\n  const setDay = (day) => {\n    setState(state => ({ ...state, day }));\n  }\n\n  function bookInterview(id, interview) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n    setState({\n      ...state,\n      appointments: appointments\n    });\n    if (interview) {\n      return (axios\n        .put(`http://localhost:8001/api/appointments/${id}`, {\n        interview\n      })\n        .then((res) => {\n          console.log(res);\n          setState({\n            ...state,\n            appointments: appointments\n          })\n        }\n        )\n        \n      )\n    }\n    console.log(\"this is interview at bookInterview\", appointments);\n  }\n\n  function cancelInterview(id) {\n    console.log('cancelling interview')\n    \n    setState({\n      ...state,\n      [id]: {\n        ...state.appointments[id],\n        interview: null\n      }\n    })\n    if (id) {\n      return axios\n        .delete(`http://localhost:8001/api/appointments/${id}`)\n        .then((res) => {\n          console.log(res);\n          setState({\n            ...state,\n            interview: null\n          })\n        })\n        \n      }\n    }\n\n    useEffect(() => {\n\n      Promise.all([\n        axios.get(\"/api/days\"),\n        axios.get(\"/api/appointments\"),\n        axios.get(\"/api/interviewers\")\n      ]).then((all) => {\n        const [days, appointments, interviewers] = all;\n        setState(prev => ({ ...prev, days: days.data, appointments: appointments.data, interviewers: interviewers.data }));\n  \n  \n      })\n    }, [state.day])\n\n    return { state, setDay, bookInterview, cancelInterview }\n}"]},"metadata":{},"sourceType":"module"}